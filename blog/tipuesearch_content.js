var tipuesearch = {"pages":[{"title":"About","text":"2016Fall 修課成員網誌","tags":"misc","url":"./pages/about/"},{"title":"2018-05-27  漸開線正齒輪輪廓外型","text":"繪製一個自選齒數的漸開線正齒輪輪廓外型 window.onload=function(){ // 設定 data/py 為共用程式路徑 brython({debug:1, pythonpath:['./']}); } from browser import document as doc import math # deg 為角度轉為徑度的轉換因子 deg = math.pi/180. # 定義 Spur 類別 class Spur(object): def __init__(self, ctx): self.ctx = ctx def create_line(self, x1, y1, x2, y2, width=3, fill=\"red\"): self.ctx.beginPath() self.ctx.lineWidth = width self.ctx.moveTo(x1, y1) self.ctx.lineTo(x2, y2) self.ctx.strokeStyle = fill self.ctx.stroke() # # 定義一個繪正齒輪的繪圖函式 # midx 為齒輪圓心 x 座標 # midy 為齒輪圓心 y 座標 # rp 為節圓半徑, n 為齒數 # pa 為壓力角 (deg) # rot 為旋轉角 (deg) # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷 def Gear(self, midx, midy, rp, n=20, pa=20, color=\"black\"): # 齒輪漸開線分成 15 線段繪製 imax = 15 # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線 self.create_line(midx, midy, midx, midy-rp) # 畫出 rp 圓, 畫圓函式尚未定義 #create_oval(midx-rp, midy-rp, midx+rp, midy+rp, width=2) # a 為模數 (代表公制中齒的大小), 模數為節圓直徑(稱為節徑)除以齒數 # 模數也就是齒冠大小 a=2*rp/n # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍 d=2.5*rp/n # ra 為齒輪的外圍半徑 ra=rp+a # 畫出 ra 圓, 畫圓函式尚未定義 #create_oval(midx-ra, midy-ra, midx+ra, midy+ra, width=1) # rb 則為齒輪的基圓半徑 # 基圓為漸開線長齒之基準圓 rb=rp*math.cos(pa*deg) # 畫出 rb 圓 (基圓), 畫圓函式尚未定義 #create_oval(midx-rb, midy-rb, midx+rb, midy+rb, width=1) # rd 為齒根圓半徑 rd=rp-d # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd # 畫出 rd 圓 (齒根圓), 畫圓函式尚未定義 #create_oval(midx-rd, midy-rd, midx+rd, midy+rd, width=1) # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小 # 將圓弧分成 imax 段來繪製漸開線 # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd if rd>rb: dr = (ra-rd)/imax else: dr=(ra-rb)/imax # tan(pa*deg)-pa*deg 為漸開線函數 sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg for j in range(n): ang=-2.*j*math.pi/n+sigma ang2=2.*j*math.pi/n+sigma lxd=midx+rd*math.sin(ang2-2.*math.pi/n) lyd=midy-rd*math.cos(ang2-2.*math.pi/n) for i in range(imax+1): # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd if rd>rb: r=rd+i*dr else: r=rb+i*dr theta=math.sqrt((r*r)/(rb*rb)-1.) alpha=theta-math.atan(theta) xpt=r*math.sin(alpha-ang) ypt=r*math.cos(alpha-ang) xd=rd*math.sin(-ang) yd=rd*math.cos(-ang) # i=0 時, 繪線起點由齒根圓上的點, 作為起點 if(i==0): last_x = midx+xd last_y = midy-yd # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點 self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color) # 最後一點, 則為齒頂圓 if(i==imax): lfx=midx+xpt lfy=midy-ypt last_x = midx+xpt last_y = midy-ypt # the line from last end of dedendum point to the recent # end of dedendum point # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標 # 下列為齒根圓上用來近似圓弧的直線 self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color) for i in range(imax+1): # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd if rd>rb: r=rd+i*dr else: r=rb+i*dr theta=math.sqrt((r*r)/(rb*rb)-1.) alpha=theta-math.atan(theta) xpt=r*math.sin(ang2-alpha) ypt=r*math.cos(ang2-alpha) xd=rd*math.sin(ang2) yd=rd*math.cos(ang2) # i=0 時, 繪線起點由齒根圓上的點, 作為起點 if(i==0): last_x = midx+xd last_y = midy-yd # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點 self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color) # 最後一點, 則為齒頂圓 if(i==imax): rfx=midx+xpt rfy=midy-ypt last_x = midx+xpt last_y = midy-ypt # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標 # 下列為齒頂圓上用來近似圓弧的直線 self.create_line(lfx,lfy,rfx,rfy,fill=color) canvas = doc['onegear'] ctx = canvas.getContext(\"2d\") x = (canvas.width)/2 y = (canvas.height)/2 r = 0.8*(canvas.height/2) # 齒數 n = 53 # 壓力角 pa = 20 Spur(ctx).Gear(x, y, r, n, pa, \"blue\") # 將 導入的 document 設為 doc 主要原因在於與舊程式碼相容 from browser import document as doc # 由於 Python3 與 Javascript 程式碼已經不再混用, 因此來自 Javascript 的變數, 必須居中透過 window 物件轉換 from browser import window import math # 主要用來取得畫布大小 canvas = doc[\"cango_gear\"] # 此程式採用 Cango Javascript 程式庫繪圖, 因此無需 ctx ctx = canvas.getContext(\"2d\") cango = window.Cango.new # 針對變數的轉換, shapeDefs 在 Cango 中資料型別為變數, 可以透過 window 轉換 shapedefs = window.shapeDefs # 目前 Cango 結合 Animation 在 Brython 尚無法運作, 此刻只能繪製靜態圖形 # in CangoAnimation.js #interpolate1 = window.interpolate # Cobi 與 createGearTooth 都是 Cango Javascript 程式庫中的物件 #cobj = window.Cobj.new shape = window.Shape.new path = window.Path.new creategeartooth = window.createGearTooth.new tweener = window.Tweener.new # 經由 Cango 轉換成 Brython 的 cango, 指定將圖畫在 id=\"cango_gear\" 的 canvas 上 cgo = cango(\"cango_gear\") ###################################### # 畫正齒輪輪廓 ##################################### def cangoGear(n, m, pa): # n 為齒數 #n = 17 # pa 為壓力角 #pa = 25 # m 為模數, 根據畫布的寬度, 計算適合的模數大小 # Module = mm of pitch diameter per tooth #m = 0.8*canvas.width/n # pr 為節圓半徑 pr = n*m/2 # gear Pitch radius # generate gear data = creategeartooth(m, n, pa) # Brython 程式中的 print 會將資料印在 Browser 的 console 區 #print(data) gearTooth = path(data, { \"fillColor\":\"#ddd0dd\", \"border\": True, \"strokeColor\": \"#606060\" }) gearTooth.rotate(180/n) # rotate gear 1/2 tooth to mesh # 單齒的齒形資料經過旋轉後, 將資料複製到 gear 物件中 gear = gearTooth.dup() # gear 為單一齒的輪廓資料 #cgo.render(gearTooth) # 利用單齒輪廓旋轉, 產生整個正齒輪外形 for i in range(1, n): # 將 gearTooth 中的資料複製到 newTooth newTooth = gearTooth.dup() # 配合迴圈, newTooth 的齒形資料進行旋轉, 然後利用 appendPath 方法, 將資料併入 gear newTooth.rotate(360*i/n) # appendPath 為 Cango 程式庫中的方法, 第二個變數為 True, 表示要刪除最前頭的 Move to SVG Path 標註符號 #gear.appendPath(newTooth, True) # trim move command = True old gear.appendPath(newTooth) # 建立軸孔 # add axle hole, hr 為 hole radius hr = 0.6*pr # diameter of gear shaft shaft = path(shapedefs.circle(hr)) #shaft.revWinding() gear.appendPath(shaft) # retain the 'moveTo' command for shaft sub path # setup the animation # backlash (mm) bklsh = 0.04*m # centre shift to make backlash dC = bklsh/(2*math.tan(math.pi*pa/180)) # np 為小齒輪齒數 np = 13 # gear ratio gr = n/np gearConfig = {'cx':-pr, 'cy':0, 'degs':[0, 360]} # gr*0.666 rpm #pinionConfig = {'cx':pr+dC, 'cy':0, 'degs':[0, -gr*360]} # 0.666 rpm # 目前並非以 tweener 執行動畫 #twnr = tweener(0, 90000, \"loop\") return gear # 設定兩齒齒數 n = 17 n2 = 11 n3 = 17 reduced_ratio = 0.5 # 使用 80% 的畫布寬度 m = 0.8*canvas.width/((n+n2+n3)*reduced_ratio) # 設定共同的壓力角 pa = 25 # n 齒輪的節圓半徑 pr = n*m/2 # n2 齒輪的節圓半徑 pr2 = n2*m/2 pr3 = n3*m/2 # 建立 gear gear = cangoGear(n, m, pa) cx = canvas.width/2 cy = canvas.height/2 #gear.translate(cx, cy) # render 繪出靜態正齒輪輪廓 #cgo.render(gear) # 利用 gear 資料複製一份, 命名為 gear1 #gear1 = gear.dup() # 建立 gear1 gear1 = cangoGear(n2, m, pa) gear2 = cangoGear(n3, m, pa) from time import time from browser.timer import request_animation_frame as raf from browser.timer import set_interval deg = math.pi/180 def draw(): cgo.clearCanvas() gear.rotate(2*deg) # 在特定位置, 以特定 scale, 特定 degs 執行 render # 設定囓合點在畫布正中央 # 囓合點往左偏 pr/2 即為 n 齒輪的圓心 x 座標 #cgo.render(gear, {'x':cx-pr*reduced_ratio, 'y':cy, 'scl':reduced_ratio, 'degs':0}) gear.transform.translate(cx-(pr+pr2)*reduced_ratio, cy) gear.transform.scale(reduced_ratio) gear.transform.rotate(0) cgo.render(gear) #cgo.render(gear, {'x':cx-(pr+pr2)*reduced_ratio, 'y':cy, 'scl':0.5, 'degs':0}) # 根據兩齒輪齒數比決定 n2 齒輪轉速 gear1.rotate(-2*deg*n/n2) gear1.transform.translate(cx, cy) gear1.transform.scale(reduced_ratio) gear1.transform.rotate(180+(360/n2/2)) cgo.render(gear1) gear2.rotate((2*deg*n/n2)*(n2/n3)) gear2.transform.translate(cx+(pr2+pr3)*reduced_ratio, cy) gear2.transform.scale(reduced_ratio) gear2.transform.rotate(180+(360/n3/2)+(180+(360/n2/2))*n2/n3) cgo.render(gear2) # 囓合點往右偏 pr2/2 即為 n2 齒輪的圓心 x 座標, 且 n2 齒轉 180 加一齒角度後囓合 #cgo.render(gear1, {'x':cx, 'y':cy, 'scl':reduced_ratio, 'degs':180+(360/n2/2)}) #cgo.render(gear2, {'x':cx+(pr2+pr3)*reduced_ratio, 'y':cy, 'scl':reduced_ratio, 'degs':180+(360/n3/2)+(180+(360/n2/2))*n2/n3}) set_interval(draw, 2)","tags":"Misc","url":"./2018-05-27-jian-kai-xian-zheng-chi-lun-lun-kuo-wai-xing.html"},{"title":"2017-06-28  本學期所學","text":"CMSimfly.stunnel.fossil.nginx CMSimfly:用來學習如何管理.操作.設計.開發 stunnel:將Client端的網路資料採用SSL(Secure Sockets Layer)加密後，安全的傳輸到指定的Server端再進行解密還原 fossil:是在軟體開發中使用的wiki軟體伺服器 nginx:可從http轉到https","tags":"Misc","url":"./2017-06-28-ben-xue-qi-suo-xue.html"},{"title":"2017-06-27  Ubuntu中啟動stunnel和fossil","text":"stunnel和fossil的安裝 1.sudo apt update 先更新 2.sudo apt install stunnel4 -y 安裝stunnel 3.sudo apt install fossil 安裝fossil 啟動設定: 進入/etc/environment中 改HTTPS=on 進入/etc/default/stunnel4中 改ENABLED=1 stunnel設定和fossil: stunnel.conf sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout localhost.key -out localhost.crt 建立local.key和local.crt /etc/stunnel/stunnel.conf設定支援IPV6 [https] accept = :::443 cert = /etc/stunnel/localhost.crt key = /etc/stunnel/localhost.key exec = /usr/bin/fossil execargs = /usr/bin/fossil http /home/user/ repository/mde2a1.fossil --https --nojail --nojail 目的在 drop the root privilege but do not enter the chroot jail 重新啟動 stunnel4 則使用 /etc/init.d/stunnel4 restart 設定完成後, 重新開機即可以 https://yourip 連結至自己組別的主機 由於本人電腦不給力,無法拍攝影片","tags":"Misc","url":"./2017-06-27-ubuntuzhong-qi-dong-stunnelhe-fossil.html"},{"title":"2017-06-26  安裝Ubuntu16.04","text":"安裝Unbutu的前置作業 這學期我們學了另一種作業系統Unbutu16.04 先準備2台舊電腦把還原卡拔除.拔起電池3秒再裝回.把硬碟裝一起.把2個4G的RAM合併成8G的RAM.開機測試B一聲OK B好幾聲不OK 之後在BIOS模式下設定開機順序由光碟先 安裝完後設定: 1.開機順序由硬碟優先 2.側蓋打開能繼續操作 3.斷電.恢復電時自動開機 之後就等安裝完成 sudo apt-get install ubuntu-desktop 安裝介面","tags":"Misc","url":"./2017-06-26-an-zhuang-ubuntu1604.html"},{"title":"2017-06-25  IPV4跳IPV6","text":"啟動Xming sever 打開putty 設定Host Name:wcmg7.kmol.info proxy設定:1.點選HTTP 2.proxy hostname:proxy.kmol.info(Port:3128) 2017-06-25_20-01-39 from 陳崴 on Vimeo .","tags":"Misc","url":"./2017-06-25-ipv4tiao-ipv6.html"},{"title":"2017-04-26  期中心得","text":"1.這次老師也教了很多新的東西,雖然有很多我還是不懂,但是我 也盡力了,像是virtualbox的安裝.ubuntu的安裝加上裡面也要設定 網路和一些小地方. 2.上次老師教的如何在虛擬主機開啟伺服器,這個我就沒做成功, 開一個伺服器原來是那麼難的一件事情,雖然我很想學但是再 短時間內學會可能有些困難. 3.從一開始上課到現在目前教過的程式加上一些實用的技能,真的 很謝謝老師那麼用心的教導,雖然不是全部都有學起來,但我相信以 後一定會應用上的.","tags":"Misc","url":"./2017-04-26-qi-zhong-xin-de.html"},{"title":"2017-04-25  製作網路線心得","text":"須先準備1條568B線.壓線鉗.接頭 先用壓線鉗把外套拆掉.再把裡面4對線分別分開 把8條線按照(白橘.橘.白綠.藍.白藍.綠.白棕.棕) 用整齊再對齊.套入接頭用力壓到底 再用壓線鉗壓緊.大功告成 這是第一次自己拆線再組起來 作起來超麻煩的 而且做出來還不一定就成功 還有可能失敗 失敗就又要再來過 原來做網路線是很麻煩的事情","tags":"Misc","url":"./2017-04-25-zhi-zuo-wang-lu-xian-xin-de.html"},{"title":"2017-04-24-2  IP指令","text":"1.查自己的IP:ipconfing /all 2.ping 自己 IP 3.ping Gateway IP 4.ping 外部 Gateway 5.ping 外部 Ip 6.tracert 區域網路主要網站 7.tracert 廣域網路主要 8.ls -l 長型列印 long list 9.clear (cls)","tags":"Misc","url":"./2017-04-24-2-ipzhi-ling.html"},{"title":"2017-04-24-3  fossil指令","text":"1.fossil clone uri fossil_file 載 uri fossil_file下來 2.fossil open 開啟fossil 3.fossil add 更新fossil 4.fossil commint -m 附加訊息 5.fossil remote-url off 遙控 url 關閉 6.fossil push 回推 7.fossil sql -R vcp.fossil 查資料 select login,pw,cap from user; 選擇要的資料","tags":"Misc","url":"./2017-04-24-3-fossilzhi-ling.html"},{"title":"2017-04-24-4  nginx安裝","text":"1.sudo apt update 下載安裝更新 2.sudo rm /var/lib/dpkg/lock 刪除lock 3.sudo apt install nginx 安裝nginx 4.ifconfig 查ip 5.cd /var/www/html 指定到/var/www/html 6.ls -l 列出目前資料夾 7.sudo vi index.nginx-debian.html 進入index.nginx-debian.html編輯 8.clear 清除所有指令 9.history 列出所有指令","tags":"Misc","url":"./2017-04-24-4-nginxan-zhuang.html"},{"title":"2017-04-24  上課筆記","text":"即便我不知道完整答案我也會舉例 設計是一種表達 表達意義在\"設\"上 1.口語表達 2.文字表達 3.2D圖像表達 4.3D圖像表達 5.量化.定性方法 6.實際操作 精巧配置東西 用固體.液體.軟體 機:很多元件批湊合成可運作 械:控制在一個範圍 器物有特定功能 設:表達出來給別人做 計:經過很多思考討論考量 熱泵(HEAT PUMP):可將能量由低溫處（低溫熱庫）傳送到高溫處（高溫熱庫） 在各種元件間最佳化 我們要利用 虛實整合設計工程師 虛:數位化 實:實作 網際內容管理在\"虛\"裡做\"實\"的內容 10/100 Mbps 1byte= 8bits DNS:網域名稱系統(Domain Name System)","tags":"Misc","url":"./2017-04-24-shang-ke-bi-ji.html"},{"title":"2017-04-23 如何開啟USB裡的cmsimfly","text":"開啟USB裡的cmsimfly 利用指令在近端開啟cmsimfly: 1.cd tmp 2.cd cmsimfly 3.python wsgi.py 2017-04-25_17-33-29 from 陳崴 on Vimeo .","tags":"Misc","url":"./2017-04-23-ru-he-kai-qi-usbli-de-cmsimfly.html"}]};